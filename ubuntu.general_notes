1.) set up public key authentication
- (note: this assumes that you don't already have an
- authorized_keys file on the remote host.  If you do you'll
- need to add the contents of id_dsa.pub to the end of it,
- rather than replacing it with id_dsa.pub as I do below)

- Generate a key:

ssh-keygen -t rsa -f ~/.ssh/id_rsa

- (don't set a passphrase for passwordless auth)
- note that this is a bit dangerous

cat .ssh/id_rsa.pub | ssh server "cat - >> .ssh/authorized_keys"
ssh server "chmod go-rwx .ssh/authorized_keys"

2.) to set DVD region code (only necessary once, per drive, EVER!!!)
- (indeed, most of them can only be set a few times before, they're
- locked forever. Be honest)
apt-get install regionset
- MAKE SURE THERE IS A VIDEO DVD IN THE DRIVE and (as root) do:
regionset
- set it to region 1, and use the mask it calculates. It will
- probably even tell you how many changes you have left

3.) Group admin
gpasswd is used to administer /etc/group

4.) you can dump the list of people in the samba db's by doing:
sudo tdbdump /var/lib/samba/passdb.tdb
- for what good it does you

5.) dpkg-reconfigure is useful for reconfiguring stuff
example:
sudo dpkg-reconfigure -phigh xserver-xorg

6.) update-alternatives is useful when playing with different
alternative things - example:

sudo update-alternatives --config usplash-artwork.so

- Of course, in the above case, you need to rebuild the initramfs to make
it all work:
sudo dpkg-reconfigure linux-image-`uname -r`

7.) Clean out cache periodically
sudo apt-get autoclean
sudo apt-get autoremove

8.) How to get to single user mode

Get there:
telinit 1

Get back:
telinit 2

(or currently set initdefault in /etc/inittab)

the command:
runlevel

tells you where you are..

9.) Tar over an ssh connection

tar -zvcf - ./hda1 | ssh matt@192.168.9.1 "cat - > foo_backup.tar.bz2" 

10.) Clear out symlinks

sudo symlinks -rd .

11.) Set up /etc/iftab to force assignments of interface to MAC
     address

eth0 mac 00:02:b3:98:df:65 arp 1
eth1 mac 00:e0:81:20:90:f6 arp 1

12.) Set up compiz, if you want

sudo apt-get install compiz compizconfig-settings-manager compiz-kde emerald 

To config: Menu -> Settings -> Advanced Desktop Effects Manager
(or run ccsm)

To turn it on, do System -> Preferences -> Desktop Effects and click "Enable Desktop Effects"

(or, to just start it, do compiz --replace)

Info here:
http://forlong.blogage.de/article/2007/8/29/How-to-set-up-Compiz-Fusion

13.) Smart monitor tools
- Info:
https://help.ubuntu.com/community/Smartmontools

- You can then get smart monitor stuff from the hard drive w/ 

smartctl

- to check the load cycles from the drive, do:

smartctl -a /dev/sda | grep Load_Cycle_Count

- to talk to the 3ware controllers, use the -d 3ware,X where X is the
  port number. As in:

- start a long self test:

sudo smartctl -t long -d 3ware,0 /dev/twe0

- show the selft test log:

sudo smartctl -l selftest -d 3ware,0 /dev/twe0

- show the error log:

sudo smartctl -l error -d 3ware,0 /dev/twe0

- For normal drives, just use the device, ie:

sudo smartctl -l error /dev/hda

- Get a list of drive info

smartctl -a /dev/sda

14.) Getting a list of packages (and their state)

dpkg --get-selections > installed-software

- You can then set the list of packages:

dpkg --set-selections < installed-software

- and install with:

dselect

15.) To shut up various programs' printing of the motd and last login:

touch ~/.hushlogin

16.) xrandr

- Enable other outputs...

xrandr --auto 

- Show config

xrandr -q

17.) Hup the e1000 card when plugged in:

sudo modprobe -r e1000
sudo modprobe e1000

18.) Add people to groups:

usermod -a -G groupname username

19.) copy stuff from one machine to another, preserving permissions
and such by using tar...

- on the DESTINATION MACHINE, as root, do:

cd /destination/path
ssh user@source_machine "cd /source/path && sudo tar -cf - ." | tar -xvf -

20.) To be able to help debug things, follow the instructions here:

https://wiki.ubuntu.com/DebuggingProgramCrash

21.) Munin

A.) Install munin-node on all servers
apt-get install munin-node
- allow the monitoring server to connect, edit /etc/munin-node.conf
allow ^192\.168\.9\.1$
allow ^10\.0\.9\.1$

- restart munin
/etc/init.d/munin-node restart

B.) Install munin on monitoring server
apt-get install munin
(remember, it needs apache installed too)
- edit the config file to hit all machines
- info:
http://www.howtoforge.com/server_monitoring_monit_munin

22.) LVM

## For machines with new lvm groups:

- create any partitions you want (I'm using /dev/sda1 here)
vgscan
pvcreate /dev/sda1
vgcreate vg /dev/sda1

- create bits with
lvcreate -LsizeG -nname vg

- where size is the size and name is the name these are now accessible
- through /dev/vg/name file systems can be made through
mke2fs -j -v /dev/vg/name
tune2fs /dev/vg/name

- 'vgs' can be used to show your volume groups 
	(sizes and free and all that)
- make mount points, add the bits to /etc/fstab and mount them

## For machines with existing lvm groups:

- generate the vg's
vgscan

- make sure all is okay (pv = physical volume, lv = logical volume)
pvscan
lvscan

- if it looks okay, enable the lv's. For each one reported by lvscan:
lvchange -a y /dev/vg/pathname

- once all are active, do:
vgmknodes

## to resise:
- lvdisplay and vgdisplay are useful to look at things
lvextend /dev/vg/home -l+number_of_extents
- or
lvextend /dev/vg/home -L+sizeMGK
- will resize
- resize2fs to resize the fs...

23.) So the UUID for a given drive

sudo vol_id -u /dev/something

24.) Doom3

export LIBGL_DRIVERS_PATH=/usr/lib32/dri
then run it

Wolfsp..

sudo sh -c "echo 'wolfsp.x86 0 0 disable' > /proc/asound/card0/pcm0c/oss"
sudo sh -c "echo 'wolfsp.x86 0 0 direct' > /proc/asound/card0/pcm0p/oss"


25.) Gnome applets in xfce4 panel
- Add items to panel
- select XfApplet
- select the gnome applet to use

26.) Fix KDE single click
emacs ~/.kde/share/config/kdeglobals
- in the [KDE] section, add:
SingleClick=false

27.) PHP XML parsing

http://us3.php.net/simplexml

SimpleXMLElement.

        $outXml = new SimpleXMLElement($result);

        $successFlag = $outXml->Status->Success;

Concannon's simple XML Parser:
http://www.redbrick.dcu.ie/~shimoda/projects/xmlParser/

(Ironically, it seems to be the best feature of PHP)

28.) Multiple monitor support:

- Set up the virtual screen size so that it can be bigger than the
  autodetected version.

  In /etc/X11/xorg.conf, add the following to the "Screen" Section

        SubSection      "Display"
           Virtual      3360 1050
        EndSubSection

- The numbers should be the horizontal and vertial dimensions of the aggregate screen. So, two 1680 x 1050 monitors give you 3360 x 1050

- then you can use xrandr to set up the screens nicely:

xrandr --output DVI-0 --auto --right-of VGA-0

- presuming one DVI and one VGA screen.. Your mileage may vary, and
  you need to see what X does to autodetect things. A useful commands
  for this is:

xrandr --prop

29.) Normalization of audio.

You wrote a normalize_music script, dummy.

However, it only works reliably across one type (ogg, mp3, etc.) Since
most of what you have is ogg, you need to convert anything else to ogg
first.

dir2ogg --recursive --smart-mp3 --delete-input ~/pub/music

30.) Useful raid/md commands

- Show devices
mdadm --detail --scan

- Info:
mdadm --detail /dev/md0
mdadm --detail /dev/md1

- useful
pvs
pvscan
pvdisplay

lvs
lvscan
lvdisplay


31.) Add a new drive to a raid array:

We will assume the new drive is /dev/sde

a.) Make sure the drive is decent and not defective by running badblocks on it.

sudo badblocks -v -w -s /dev/sde

b.) Set up the partition based off the existing drive partition

- Assume the drive we want to pull the partition table from is
  /dev/sda and the new drive is /dev/sde

sfdisk -d /dev/sda | sfdisk /dev/sde

c.) Add the new partitions to existing md devices

mdadm /dev/md0 --add /dev/sde1
mdadm /dev/md1 --add /dev/sde2

d.) By default, they will be set as hot spares, since the initial
array has 2 drives. This will change it to have three:

mdadm /dev/md0 --grow -n 3
mdadm /dev/md1 --grow -n 3

e.) update /etc/mdadm/mdadm.conf

- change the lines describing the ARRAY devices to have the correct
  num-devices. FAILURE TO DO THIS WILL MAKE IT NOT BOOT!!!

f.) regenerate the initramfs

sudo dpkg-reconfigure linux-image-`uname -r`

- FAILURE TO DO THIS WILL MAKE IT NOT BOOT!!!

32.) Replace a hard drive with a bigger one

- pull the drive out of the laptop and attach to a machine with space

dd if=/dev/sdd of=./laptop_drive bs=1m

- put the new drive in and copy it back

dd if=./laptop_drive of=/dev/sdd bs=1m

- use fdisk or parted and extend the partition

- fill the partition with the crypt volume

cryptsetup resize sda3_crypt

- resize the physical volume

pvresize /dev/mapper/sda3_crypt

- resize the logical volume

lvresize -L 20G /dev/mapper/drives-root

- resize the filesystem

resize2fs /dev/mapper/drives-root

33.) Rename a crypt volume

- rename the running instance

setup rename sda3_crypt sda2_crypt

- edit /etc/crypttab and change the name there as well
- rebuild the initrd. The above had to be set up in order for the
- system to be in the correct state for it to read and emulate in ram.
sudo dpkg-reconfigure linux-image-`uname -r`
- reboot

34.) Advanced SSH techniques:

Dynamic Forwarding:
- Sets up an SSH proxy on your local machine which proxies traffic to
  an outside machine
http://blog.electricjellyfish.net/2006/03/dynamicforward-where-have-you-been-all.html

- start up the proxy:
ssh -o 'DynamicForward 8080' leary.csoft.net -N

- create a firefox proxy (PAC) file
function FindProxyForURL(url, host)
{
    switch(host)
    {
        case "wordpress.mattcaron.net":
        case "wordpress.fishhousefishandgame.com":
            return "SOCKS localhost:8080; DIRECT";
            break;
        default:
            return "DIRECT";
            break
    }
}

- and then set preferences->advanced->network tab->settings->
  automatic proxy configuration URL to:
  file:///home/matt/.mozilla/leary_proxy

- Of course, this doesn't work because it doesn't get sent to
  mattcaron.net, so that doesn't work.

Proxying about:
- SSH to a machine via other machines. This is very useful when
  hitting machines through the one machine with port 22 forwarded to
  it. Sure, you can specify an alternate port, but this would allow
  you to set up convenient aliases ahead of time, which is nice.
http://blog.ganneff.de/blog/2007/12/15/using-a-ssh-jumphost.html

Triggers:
- Set up a public key without a password, but limit it to do specific
  things, giving a modicum of security.
http://blog.ganneff.de/blog/2007/12/29/ssh-triggers.html

(1) generate the key:

ssh-keygen -t rsa -f ~/.ssh/id_rsa_cmd

(and don't enter a passphrase)

echo -n "command=\"command\" "| cat - .ssh/id_rsa_cmd.pub | \
ssh server cat - >> .ssh/authorized_keys

- where server is the server and command is the command you want to run


Set up pam_ssh - login automatically unlocks your key (which is,
likely not a good idea).
http://www.clasohm.com/blog/one-entry?entry_id=12085 

SSH ControlMaster:
- Vastly accelerates things like sshfs, and also makes things like
  opening multiple windows much nicer.
http://www.linux.com/feature/54498

# ssh multiplexing - multiplex subsequent connections through the
# first. Huge speed increase on some things, convenience on others.
ControlMaster auto
ControlPath ~/.ssh/master-%r@%h:%p

35.) SSH VPN

- this will likely be useful here

Add nice domains to be automatically added to resolv.conf (for
     laptop/mobile systems)

apt-get install resolvconf

- edit /etc/resolvconf/resolv.conf.d/base and add what you
  like. Additional searches will be added to this by DHCP as
  appropriate.

36.) Second Life
From:
http://www.byteme.org.uk/secondlife-amd64/apt-get-a-secondlife.html

Stable release track:
deb http://apt.byteme.org.uk unstable main
deb-src http://apt.byteme.org.uk unstable main

Join the in world "Secondlife Debian Package Testers"

GPG Key (can't seem to get it from keyserver)
gpg --keyserver http://subkeys.pgp.net --recv-key 0x3b7ee764
gpg --export 0x3b7ee764 | sudo apt-key add -

Install:
apt-get install slviewer

The bleeding edge is renamed:
apt-get install omvviewer 

37.) ufw
https://wiki.ubuntu.com/UbuntuFirewall

ufw enable
ufw default deny

- If you have kept up with all the firewall stuff above, the rules
  should already be set up.

- If you want way too much info, do:
ufw logging on

- To show the status, do
ufw status

38.) Custom terminal login message:

/etc/issue
/etc/issue.net

39.) change luks (full disk encryption) passphrase

sudo cryptsetup luksAddKey /dev/sda2

- reboot to make sure the new key works

sudo cryptsetup luksKillSlot /dev/sda2 <old slot number>

40.) Changing ssh passphrases:

ssh-keygen -f id_rsa -p

41.) Bootsplash reconfigure on 11.04

sudo update-alternatives --config default.plymouth
sudo update-alternatives --config text.plymouth

sudo dpkg-reconfigure linux-image-`uname -r`

42.) To configure KDE from inside gnome:

systemsettings (and confiure)

(except it doesn't work on 11.04)

43.) Set up the compose key:

https://help.ubuntu.com/community/ComposeKey 

System->Preferences->Keyboard
Layouts tab
Options
Compose Key Position
Set it to left windows.
Close
Apply System-Wide

44.) Remove a drive from a RAID array

We will assume the old drive is /dev/sdc

a.) Fail the devices (so they go idle):

mdadm /dev/md0 --fail /dev/sdc1
mdadm /dev/md1 --fail /dev/sdc2

b.) Remove the devices

mdadm /dev/md0 --remove /dev/sdc1
mdadm /dev/md1 --remove /dev/sdc2

c.) By default, they will be set as hot spares, since the initial
array has 2 drives. This will change it to have three:

mdadm /dev/md0 --grow -n 2
mdadm /dev/md1 --grow -n 2

e.) update /etc/mdadm/mdadm.conf

- change the lines describing the ARRAY devices to have the correct
  num-devices. FAILURE TO DO THIS WILL MAKE IT NOT BOOT!!!

f.) regenerate the initramfs

sudo dpkg-reconfigure linux-image-`uname -r`

- FAILURE TO DO THIS WILL MAKE IT NOT BOOT!!!

45.) rrsync

This is a wrapper for rsync to restrict it to a specific subdir:

sudo gunzip /usr/share/doc/rsync/scripts/rrsync.gz
sudo chmod a+x /usr/share/doc/rsync/scripts/rrsync
cd /usr/local/bin
sudo ln -s /usr/share/doc/rsync/scripts/rrsync . 

46.) Set browser in thunderbird

This looks to be controlled by
matt/.thunderbird/default/ysovf56j.slt/mimeTypes.rdf. Find the
urn:scheme:externalApplication:http and https lines, and change them
to what you want. Sane choices are:
- `sensible-browser`, so it picks up the system settings, which are set with 
         `sudo update-alternatives --config x-www-browser`
- `exo-open`, which opens the selected one from XFce

47.) Hack Greybird theme to have arrows (and fix other minor annoyances too):

cp -a /usr/share/themes/Greybird ~/.themes/Greybird-mc

- edit ~/.themes/Greybird-mc/gtk-2.0/gtkrc and change 

	GtkScrollbar		::has-backward-stepper 			= 0
	GtkScrollbar		::has-forward-stepper			= 0 

to

	GtkScrollbar		::has-backward-stepper 			= 1
	GtkScrollbar		::has-forward-stepper			= 1 

48.) Replace a failed RAID drive (or upgrade to a larger one):

a.) Copy the partition from an existing drive

- small drives (< 3TB)

sfdisk -d /dev/sdX | sfdisk /dev/sdY

- larger, GPT drives (>= 3TB)

** X is old, Y is new **

sgdisk -R /dev/sdY /dev/sdX && sgdisk -G /dev/sdY

b.) add in the replacement drive

sudo mdadm --add /dev/mdX /dev/sdXn

c.) If the drive is to be bootable, make sure to install grub on it

sudo grub-install /dev/sdX

d.) If expanding a drive.

i.) Resize the partition

On each drive, use parted:

`parted /dev/sdx resizepart #`

where # is the partition number, to resize the underlying partition to
the correct size.

Note: You can find the end by doing:

    parted /dev/sdx print free

ii.) Expand the MD RAID size to fill the new partition.

mdadm --grow /dev/mdX --size=max

iii.) Resize the crypto device (if present)

cryptsetup resize /dev/mapper/md1_crypt

iv.) Resize the physical volume

    pvresize /dev/mapper/md1_crypt

or

    pvresize /dev/mdX

(you can check this with pvdisplay)

v.) Resize the logical volume(s), in this case to fill the whole PV.

    lvextend /dev/drives/home /dev/mapper/md1_crypt

or

    lvextend /dev/drives/home /dev/mdX

v.) Resize the underlying filesystem.

resize2fs /dev/drives/home

And all is well.

49.) ecryptfs tutorial

https://www.howtoforge.com/tutorial/how-to-encrypt-directories-with-ecryptfs-on-ubuntu-16-04/

- basically
1.) Install it

sudo apt-get install ecryptfs-utils

sudo mount -t ecryptfs ~/secret ~/secret -o ecryptfs_cipher=aes,ecryptfs_key_bytes=32,ecryptfs_passthrough=n,ecryptfs_enable_filename_crypto=y,ecryptfs_fnek_sig=XXXXXXXXXXXXX

Where X is the key signature.

