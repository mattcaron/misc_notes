From a clean Xubuntu 14.04 install. I used the minimal install CD and
installed the XUbuntu Desktop and SSH server.

1.) Base install

Normal install, did 4 partitions, root, home, swap, usr/local (for the
common software). One drive, no RAID, simple.

2.) Install useful base things

sudo apt-get install emacs synaptic

3.) After machine is up, run synaptic, go to settings->repositories
make sure the following are enabled:

- main
- universe
- restricted
- multiverse
- source code

Select other software tab and enable/add:
- partner
- partner (Source Code)
- independent
- independent (Source code)

Select updates tab and enable:
- trusty-security
- trusty-updates
- trusty-backports

(or just grab sources.list from some reasonable machine)

4.) Do:
apt-get update
apt-get dist-upgrade

5.) Install base useful things

apt-get install nmap traceroute emacs emacs-goodies-el css-mode openssh-server symlinks sysstat ifstat dstat ssmtp powertop gif2png units tofrodos gcc make g++ gdb autoconf libtool automake libc6-dev samba cifs-utils meld ntp unrar subversion mono-runtime monodevelop monodevelop-nunit monodevelop-versioncontrol monodoc-manual glade mono-gmcs smartmontools vnc4server xvnc4viewer aspell aspell-en openjdk-7-jdk icedtea-7-plugin libmono-i18n2.0-cil libmono-microsoft8.0-cil p7zip latencytop apt-show-versions git-core gitk git-svn speedcrunch  apt-file manpages-posix manpages-posix-dev manpages-dev manpages c-cpp-reference ipcalc logcheck preload iftop atop libc6-i386 libc6-dev-i386 lib32z1 lib32ncurses5 lib32bz2-1.0 arandr tree meshlab lm-sensors gkrellm xfce4-goodies xfce4-battery-plugin xfce4-battery-plugin xfce4-cellmodem-plugin xfce4-clipman-plugin xfce4-cpufreq-plugin xfce4-cpugraph-plugin xfce4-datetime-plugin xfce4-dict xfce4-diskperf-plugin xfce4-eyes-plugin xfce4-fsguard-plugin xfce4-genmon-plugin xfce4-hdaps xfce4-indicator-plugin xfce4-linelight-plugin xfce4-mailwatch-plugin xfce4-messenger-plugin xfce4-mount-plugin xfce4-mpc-plugin xfce4-netload-plugin xfce4-notes-plugin xfce4-places-plugin xfce4-power-manager-plugins xfce4-quicklauncher-plugin xfce4-radio-plugin xfce4-screenshooter-plugin xfce4-sensors-plugin xfce4-smartbookmark-plugin xfce4-systemload-plugin xfce4-time-out-plugin xfce4-timer-plugin xfce4-verve-plugin xfce4-wavelan-plugin xfce4-weather-plugin xfce4-whiskermenu-plugin xfce4-wmdock-plugin xfce4-xkb-plugin xfswitch-plugin

6.) Set up ssh

## For an old machine, use the old keys - you did save /etc, didn't you?

## For a new machine, use the new keys generated by the distro.

- make sure to add to the firewall
ufw allow ssh

- In /etc/ssh/sshd_config, set:
- PermitRootLogin no

- once you've set up public key auth, turn off password access. edit
    /etc/ssh/sshd_config
and set
    PasswordAuthentication no

service ssh restart

7.) Turn on the firewall

ufw enable

8.) Fix cron - add the following to the top of personal crontab:

MAILTO="matt@mattcaron.net"

9.) Set up samba:

TBD

10.) Set up ssmtp
    cd /etc/ssmtp
    mv ssmtp.conf ssmtp.conf.old
    cp ~/system_stuff/ssmtp/ssmtp.conf .
    chmod a+r ssmtp.conf

11.) Set up sensors

- Add the following to /etc/modules:
coretemp
smsc47m1

12.) Set up logcheck
- edit /etc/cron.d/logcheck and set it to @daily and not every 2 hours

13.) Pulseaudio equalizer:

sudo apt-add-repository ppa:nilarimogard/webupd8

sudo apt-get update && sudo apt-get install pulseaudio-equalizer

14.) Make java pretty

-  Edit /usr/lib/jvm/java-7-openjdk-amd64/jre/lib/swing.properties
   and uncomment:

swing.defaultlaf=com.sun.java.swing.plaf.gtk.GTKLookAndFeel

15.) Stop the stupid GNOME SSH agent thing from working.

NOTE: This is a stupid hack to get around the fact that, apparently,
the gnome keyring is started unconditionally with all components if
any gnome services are run (and we would like to run them, just not
this specific one).

To fix, do:

cd /usr/bin
sudo mv gnome-keyring-daemon gnome-keyring-daemon-wrapped

Then create a new gnome-keyring-daemon and set its contents to:

#!/bin/sh
exec /usr/bin/gnome-keyring-daemon-wrapped --components=pkcs11,secrets,gpg "$@"

and make it executable:

sudo chmod a+rx /usr/bin/gnome-keyring-daemon

Also, you need to go into ~/.config/autostart/gnome-keyring-ssh.desktop and add:

[Desktop Entry]
X-GNOME-Autostart-enabled=false

so that it doesn't get started by the ancillary (and likely redundant)
separate invoker.

16.) Restore old-style Linux grognard boot messages.

Edit /etc/default/grub

Change:

    GRUB_CMDLINE_LINUX_DEFAULT="splash quiet"

to:

    GRUB_CMDLINE_LINUX_DEFAULT=""

Then do:

sudo update-grub

17.) Install real chrome

The ubuntu packaged chromium is broken in a couple of ways - NaCL
support, etc. NaCL support is required for Hangouts to work. Solution:
Install Chrome from a PPA.

Instructions from:
  http://www.google.com/linuxrepositories/
  http://www.howopensource.com/2011/10/install-google-chrome-in-ubuntu-11-10-11-04-10-10-10-04/

Do:
wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
sudo sh -c 'echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
sudo chmod a+r /etc/apt/sources.list.d/google-chrome.list
sudo apt-get update
sudo apt-get install google-chrome-stable

See the following for more info on chromium fail
https://bugs.launchpad.net/ubuntu/+source/chromium-browser/+bug/882942

18.) Install latest OpenSCAD

sudo add-apt-repository ppa:openscad/releases
sudo apt-get update
sudo apt-get install openscad

19.) Update to latest mono (necessary for best Creation Workshop functioning)

From: http://www.mono-project.com/docs/getting-started/install/linux/

- Note that we don't install anything here explicitly, because it's
  all installed above.

sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
echo "deb http://download.mono-project.com/repo/debian wheezy main" | sudo tee /etc/apt/sources.list.d/mono-xamarin.list
sudo chmod a+r /etc/apt/sources.list.d/mono-xamarin.list
sudo apt-get update
sudo apt-get dist-upgrade

20.) Configure for pam automount homedir from central house server:

- edit /etc/security/pam_mount.conf.xml
- add the following under the "Volume definitions" comment:

<volume fstype="cifs" server="amahi" path="%(USER)" mountpoint="/home/%(USER)" user="*" options="rw,auto"/>

21.) On the Amahi server, edit /etc/samba/smb.conf, and make sure the
following are set to ensure proper Unix behavior.

unix extensions = yes
case sensitive = yes

Note that "unix extensions = yes" might break some windows
machines. However, we don't have any, so we don't care.

22.) Make a muve3d bind mount share:

Make the dir, user group, setgid set, sticky bit set:

mkdir /mnt/shared/muve3d
sudo chgrp users /mnt/shared/muve3d
sudo chmod go+s /mnt/shared/muve3d

- Add the following to /etc/fstab

/mnt/shared/muve3d      /mnt/muve3d           none   bind             0       0
/mnt/muve3d             /home/matt/muve3d/    none   bind             0       0
/mnt/muve3d             /home/liz/muve3d/     none   bind             0       0

23.) Make sure to set access on serial devices for users:

sudo usermod -a -G dialout matt

24.) From this point on, everything is in the network mapped homedir,
in ~/workspace/3d_printing. If this becomes a multiuser system, I
likely need to move it to /usr/local or something, but, for now,
having it in the shared homedir is quite convenient.
